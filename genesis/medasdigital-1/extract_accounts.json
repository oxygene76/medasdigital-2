import json
import sys

def extract_accounts_with_vesting(genesis_file_path, export_file_path):
    # Lade die Genesis-Datei
    with open(genesis_file_path, 'r') as file:
        genesis_data = json.load(file)
    
    # Extrahiere die Accounts und Vesting-Informationen
    accounts_data = genesis_data['app_state']['auth']['accounts']
    export_data = []

    for account in accounts_data:
        # Grundlegende Account-Informationen
        account_info = {
            "address": account.get("address", ""),
            "type": account["@type"],
            "pub_key": account.get("pub_key", {}).get("key", "") if account.get("pub_key") else "",
            "account_number": account.get("account_number", ""),
            "sequence": account.get("sequence", ""),
            "balance": None,
            "vesting": None
        }
        
        # Extrahiere den Kontostand und vesting-bezogene Informationen für Vesting Accounts
        if "base_vesting_account" in account:
            vesting_info = account["base_vesting_account"]
            base_account = vesting_info["base_account"]
            account_info["address"] = base_account.get("address", "")
            account_info["pub_key"] = base_account.get("pub_key", {}).get("key", "") if base_account.get("pub_key") else ""
            account_info["account_number"] = base_account.get("account_number", "")
            account_info["sequence"] = base_account.get("sequence", "")
            
            # Spezifische Vesting-Informationen
            account_info["vesting"] = {
                "original_vesting": vesting_info.get("original_vesting", []),
                "delegated_free": vesting_info.get("delegated_free", []),
                "delegated_vesting": vesting_info.get("delegated_vesting", []),
                "end_time": vesting_info.get("end_time", ""),
                "start_time": vesting_info.get("start_time", "")
            }
        else:
            # Accounts ohne Vesting (gewöhnliche Konten)
            account_info["balance"] = account.get("coins", [])
        
        export_data.append(account_info)

    # Speichere die exportierten Daten in der Exportdatei
    with open(export_file_path, 'w') as export_file:
        json.dump(export_data, export_file, indent=4)
    
    print(f"Accounts und Vesting-Informationen wurden erfolgreich in {export_file_path} exportiert.")

# Überprüfung, ob die richtigen Kommandozeilenparameter übergeben wurden
if __name__ == "__main__":
    if len(sys.argv) != 3:
        print("Verwendung: python scriptname.py <genesis_file_path> <export_file_path>")
        sys.exit(1)
    
    # Kommandozeilenparameter für die Genesis- und Exportdatei-Pfade
    genesis_file_path = sys.argv[1]
    export_file_path = sys.argv[2]
    
    # Aufruf der Funktion mit den übergebenen Dateipfaden
    extract_accounts_with_vesting(genesis_file_path, export_file_path)
